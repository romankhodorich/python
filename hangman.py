from multiprocessing.connection import answer_challenge
import random
word_list = ['КЛЮЧ', 'КНИГА', 'ЕНОТ', 'МАШИНКА', 'КОРОВА', 'ТЕЛЕЖКА', 'ШЛЕМ', 'КНОПКА', 'ШНУР', 'ЧЕРНЫЙ',
             'ВЛАСТЕЛИН', 'СКАЙП', 'ДУБ', 'ЧАСЫ', 'ТРУБА', 'ЕЛКА', 'ИНСТИТУТ', 'КОРОБКА', 'ТАБЛИЧКА', 'ВОДА', 'СКОВОРОДА',
             'МНОГОНОЖКА', 'ЕВРЕЙ', 'ТЕРМИТ', 'КАЧЕК', 'РУЛОН', 'МАГНИТОФОН', 'НОГА', 'СЛОН', 'МИКРОВОЛНОВКА', 'ТОРТ', 'МАК',
             'ДЫМ', 'ЧАЙКА', 'ВАЛЕТ', 'ПЛИНТУС', 'ШАПКА', 'ДИНОЗАВР', 'ТОРШЕР', 'БАЛАЛАЙКА', 'БАНКА', 'ЯХТА', 'ОВЦА', 'БАНАН',
             'ДУБ', 'АНИМЕ', 'РАДУГА', 'БУКВА', 'ВЕЛОСИПЕД', 'БАНДЖО', 'ГОЛУБЬ', 'ВИНТОВКА', 'КУБОК', 'ЖАСМИН', 'ТЕЛЕФОН',
             'АНДРОИД', 'ГОРА', 'ХАЛАТ', 'ЖЕТОН', 'ОБОД', 'МЫЛО', 'ЙОГ', 'ШИШКА', 'ДОЛЛАР', 'КОЛОНКА', 'КУБИК', 'ОМАР',
             'РАКЕТА', 'МОРКОВКА', 'ЗЕРКАЛО', 'МОЛОТ', 'ВОЗДУХ', 'ЗМЕЙ', 'ЁЖ', 'ПАЛЬМА', 'МАСЛО', 'ДИДЖЕЙ', 'МЕШОК', 'ТЮБИК',
             'МОЗГ', 'ПОЕЗД', 'РОЗЕТКА', 'ПАРАШЮТИСТ', 'БЕЛКА', 'ШПРОТЫ', 'САМОСВАЛ', 'ПАЗЛ', 'БУТЫЛКА', 'КРЕМЛЬ', 'ПИЦЦА',
             'МАКАРОНЫ', 'КОВЕР', 'ЗУБЫ', 'ЯРЛЫК', 'КАШАЛОТ', 'МАРС', 'ШАКАЛ', 'ПОМАДА', 'ДЖИП', 'ЛЕЩ', 'КАМЕНЬ', 'ДИСК']


def get_word():
    return random.choice(word_list).upper()

# функция получения текущего состояния


def display_hangman(tries):
    stages = [
        '''
                _______
                |     |
                |     O
                |    \|/
                |     |
                |    / \\
                |
                |  ПИЗДЕЦ!
                ''',
        '''
                _______
                |     |
                |     O
                |    \|/
                |     |
                |    / 
                |
                ''',
        '''
                _______
                |     |
                |     O
                |    \|/
                |     |
                |
                |
                ''',
        '''
                _______
                |     |
                |     O
                |    \|
                |     |
                |
                |
                ''',
        '''
                _______
                |     |
                |     O
                |     |
                |     |
                |
                |
                ''',
        '''
                _______
                |     |
                |     O
                |
                |
                |
                |
                ''',
        '''
                _______
                |     |
                |
                |
                |
                |
                |
                '''
    ]
    return stages[tries]


def play(word):
    # строка, содержащая символы _ на каждую букву задуманного слова
    word_completion = '_' * len(word)
    guessed = False                    # сигнальная метка
    guessed_letters = []               # список уже названных букв
    guessed_words = []                 # список уже названных слов
    tries = 6                          # количество попыток
    print('Привет! Давай сыграем в игру!')
    print(display_hangman(tries))
    print(word_completion)
    while tries != 0 and guessed == False:
        s = input('Попробуй угадать, введи букву или слово:   ').upper()
        for i in s:
            guessed_letters.append(i)
            if i in word:
                for index in range(len(word)):
                    if word[index] == i:
                        word_completion = word_completion[:index] + \
                            i + word_completion[index + 1:]

        if '_' not in word_completion:
            guessed = True
        print(word_completion)
        print(display_hangman(tries))
        tries -= 1
    else:
        print('Поздравляю! Вы угадали!!! Загадано слово', word)


play(get_word())
answer_play_one_more = input('Сыграем еще раз? (да / нет):   ')

if answer_play_one_more == 'да':
    play(get_word())
else:
    print("Хорошего дня!!!")
